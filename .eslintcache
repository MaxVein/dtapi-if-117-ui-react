[{"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\index.js":"1","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\reportWebVitals.js":"2","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\App.js":"3","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\guards\\ProtectedRoute.js":"4","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\utils.js":"5","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\AdminPanel.js":"6","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\guards\\LoginRoute.js":"7","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\login\\index.js":"8","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\AdminNavItem.js":"9","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\environments\\environment.js":"10","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\navUtils.js":"11","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\login\\Login.js":"12","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\index.js":"13","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\SpecialityView.js":"14","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\SpecialityAddDialog.js":"15","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\SpecialityViewList.js":"16","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\index.js":"17","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsPage\\StudentsPage.js":"18","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsTable\\StudentsTable.js":"19","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\services\\StudentsService.js":"20","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\Loader\\Loader.js":"21","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsCreateUpdateModal\\StudentsCreateUpdateModal.js":"22","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\SnackBar\\SnackBar.js":"23","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\Alert\\Alert.js":"24","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsCreateUpdateModal\\CreateUpdateForm\\CreateUpdateForm.js":"25","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsConfirm\\StudentsConfirm.js":"26","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsViewModal\\StudentsViewModal.js":"27","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsViewModal\\StudentInfo\\StudentInfo.js":"28","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsTransferModal\\StudentsTransferModal.js":"29","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsTransferModal\\TransferSelects\\TransferSelects.js":"30"},{"size":543,"mtime":1609869891342,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1609848914048,"results":"33","hashOfConfig":"32"},{"size":1277,"mtime":1609929183555,"results":"34","hashOfConfig":"32"},{"size":940,"mtime":1609849008507,"results":"35","hashOfConfig":"32"},{"size":923,"mtime":1609849008508,"results":"36","hashOfConfig":"32"},{"size":6050,"mtime":1609929183556,"results":"37","hashOfConfig":"32"},{"size":1016,"mtime":1609849008507,"results":"38","hashOfConfig":"32"},{"size":51,"mtime":1609849008510,"results":"39","hashOfConfig":"32"},{"size":536,"mtime":1609869891374,"results":"40","hashOfConfig":"32"},{"size":92,"mtime":1610147343500,"results":"41","hashOfConfig":"32"},{"size":953,"mtime":1609849008508,"results":"42","hashOfConfig":"32"},{"size":3765,"mtime":1609849008510,"results":"43","hashOfConfig":"32"},{"size":70,"mtime":1609849008510,"results":"44","hashOfConfig":"32"},{"size":3375,"mtime":1609849008509,"results":"45","hashOfConfig":"32"},{"size":4036,"mtime":1609849008509,"results":"46","hashOfConfig":"32"},{"size":1790,"mtime":1609849008509,"results":"47","hashOfConfig":"32"},{"size":126,"mtime":1609931353464,"results":"48","hashOfConfig":"32"},{"size":3495,"mtime":1610278547189,"results":"49","hashOfConfig":"32"},{"size":8250,"mtime":1610278649113,"results":"50","hashOfConfig":"32"},{"size":2818,"mtime":1610221089241,"results":"51","hashOfConfig":"32"},{"size":286,"mtime":1609884002506,"results":"52","hashOfConfig":"32"},{"size":6301,"mtime":1610234723378,"results":"53","hashOfConfig":"32"},{"size":893,"mtime":1609941522883,"results":"54","hashOfConfig":"32"},{"size":1537,"mtime":1610212608883,"results":"55","hashOfConfig":"32"},{"size":20617,"mtime":1610278296690,"results":"56","hashOfConfig":"32"},{"size":2139,"mtime":1610212593544,"results":"57","hashOfConfig":"32"},{"size":3382,"mtime":1610234585910,"results":"58","hashOfConfig":"32"},{"size":2931,"mtime":1610208683741,"results":"59","hashOfConfig":"32"},{"size":4622,"mtime":1610235785956,"results":"60","hashOfConfig":"32"},{"size":4913,"mtime":1610235785964,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1omze5d",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\index.js",[],["125","126"],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\reportWebVitals.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\App.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\guards\\ProtectedRoute.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\utils.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\AdminPanel.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\guards\\LoginRoute.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\login\\index.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\AdminNavItem.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\environments\\environment.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\common\\navUtils.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\login\\Login.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\index.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\SpecialityView.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\SpecialityAddDialog.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\admin\\speciality\\SpecialityViewList.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\index.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsPage\\StudentsPage.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsTable\\StudentsTable.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\services\\StudentsService.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\Loader\\Loader.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsCreateUpdateModal\\StudentsCreateUpdateModal.js",["127","128"],"import React, { useEffect, useState } from \"react\";\nimport { StudentsServiceAPI } from \"../services/StudentsService\";\nimport CreateUpdateForm from \"./CreateUpdateForm/CreateUpdateForm\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./StudentsCreateUpdateModal.module.css\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Paper,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nconst StudentsCreateUpdateModal = ({\n  open,\n  isUpdate,\n  groupID,\n  student,\n  setStudents,\n  setDataSource,\n  setOpen,\n  setError,\n  setSnackBar,\n}) => {\n  const [studentData, setStudentData] = useState(\n    isUpdate && student ? { ...student } : { group_id: groupID }\n  );\n  const [submit, setSubmit] = useState(false);\n  const [loading, setLoading] = useState(!!isUpdate);\n\n  useEffect(() => {\n    if (isUpdate && student) {\n      (async function getStudentInfo(id) {\n        try {\n          const student = await StudentsServiceAPI.fetchStudentDataForUpdate(\n            id\n          );\n          setStudentData((prevState) => ({\n            ...prevState,\n            ...student[0],\n          }));\n          setLoading(false);\n        } catch (e) {\n          errorHandler(\n            \"Помилка\",\n            \"Сталася помилка при отриманні даних студента. Спробуйте знову\",\n            \"Закрито через помилку\"\n          );\n        }\n      })(student.user_id);\n    }\n  }, [isUpdate, student, setOpen, setError, setSnackBar]);\n\n  useEffect(() => {\n    if (submit && studentData) {\n      setLoading(true);\n      if (isUpdate) {\n        (async function update() {\n          try {\n            const res = await StudentsServiceAPI.update(\n              studentData.user_id,\n              studentData\n            );\n            if (res.data.response === \"ok\") {\n              setDataSource((prevState) => {\n                const index = prevState.findIndex(\n                  (s) => s.user_id === studentData.user_id\n                );\n                prevState[index] = studentData;\n                return [...prevState];\n              });\n              setLoading(false);\n              setOpen(false);\n              setSnackBar({ open: true, message: \"Дані студента змінено\" });\n            }\n          } catch (e) {\n            if (e.response.data.response === \"Error when update\") {\n              errorHandler(\n                \"Попередження\",\n                \"Сталася помилка під час оновлення даних студента. Щоб оновити дані студента слід здійснити зміни у поточних даних\",\n                \"Зміни не було внесено!\"\n              );\n            } else {\n              errorHandler(\n                \"Помилка\",\n                \"Сталася помилка під час оновлення даних студента. Спробуйте знову\",\n                \"Закрито через помилку\"\n              );\n            }\n          }\n        })();\n      } else {\n        (async function create() {\n          try {\n            const res = await StudentsServiceAPI.create(studentData);\n            const { id, response } = res.data;\n            if (id && response === \"ok\") {\n              studentData.user_id = id.toString();\n              setStudents((prevState) => [...prevState, studentData]);\n              setLoading(false);\n              setOpen(false);\n              setSnackBar({ open: true, message: \"Студента додано\" });\n            }\n          } catch (e) {\n            errorHandler(\n              \"Помилка\",\n              \"Сталася помилка під час створення студента. Спробуйте знову\",\n              \"Закрито через помилку\"\n            );\n          }\n        })();\n        return () => setStudentData({});\n      }\n    }\n  }, [\n    submit,\n    studentData,\n    setStudents,\n    isUpdate,\n    setSnackBar,\n    setOpen,\n    setError,\n    setLoading,\n    setDataSource,\n  ]);\n\n  const errorHandler = (type, errorMessage, snackMessage) => {\n    setLoading(false);\n    setOpen({ open: false });\n    setSnackBar({ open: true, message: snackMessage });\n    setError({\n      error: true,\n      message: errorMessage,\n      type: type,\n    });\n  };\n\n  return (\n    <Paper className={classes.Dialog} elevation={0} variant={\"outlined\"}>\n      <Dialog\n        fullWidth={false}\n        maxWidth={false}\n        className={classes.Dialog}\n        open={open}\n      >\n        {loading ? (\n          <CircularProgress\n            className={classes.Spinner}\n            color={\"primary\"}\n            size={80}\n            variant=\"indeterminate\"\n          />\n        ) : (\n          <div className={classes.StudentsDialog}>\n            <DialogTitle\n              disableTypography={true}\n              className={classes.DialogTitle}\n            >\n              <h1>\n                {isUpdate ? (\n                  <EditIcon className={classes.TitleIcon} />\n                ) : (\n                  <PersonAddIcon className={classes.TitleIcon} />\n                )}\n                {isUpdate\n                  ? \"Редагувати дані студента\"\n                  : \"Додати нового студента\"}\n              </h1>\n            </DialogTitle>\n            <DialogContent className={classes.DialogContent}>\n              <CreateUpdateForm\n                isUpdate={isUpdate}\n                updateData={studentData}\n                setSnackBar={setSnackBar}\n                setOpen={setOpen}\n                setStudentData={setStudentData}\n                setSubmit={setSubmit}\n              />\n            </DialogContent>\n          </div>\n        )}\n      </Dialog>\n    </Paper>\n  );\n};\n\nexport default StudentsCreateUpdateModal;\n\nStudentsCreateUpdateModal.propTypes = {\n  open: PropTypes.bool,\n  isUpdate: PropTypes.bool,\n  groupID: PropTypes.string,\n  student: PropTypes.object,\n  setStudents: PropTypes.func,\n  setDataSource: PropTypes.func,\n  setOpen: PropTypes.func,\n  setError: PropTypes.func,\n  setSnackBar: PropTypes.func,\n};\n","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\SnackBar\\SnackBar.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\components\\Alert\\Alert.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsCreateUpdateModal\\CreateUpdateForm\\CreateUpdateForm.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsConfirm\\StudentsConfirm.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsViewModal\\StudentsViewModal.js",["129"],"import React, { useEffect, useState } from \"react\";\nimport { StudentsServiceAPI } from \"../services/StudentsService\";\nimport StudentInfo from \"./StudentInfo/StudentInfo\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./StudentsViewModal.module.css\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Paper,\n  CircularProgress,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nconst StudentsViewModal = ({\n  open,\n  setOpen,\n  groupID,\n  studentID,\n  setError,\n  setSnackBar,\n}) => {\n  const [student, setStudent] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async function getStudentInfo() {\n      try {\n        const response = await StudentsServiceAPI.fetchStudentInfo(\n          studentID,\n          groupID\n        );\n        if (response.length) {\n          setStudent(response[0]);\n          setLoading(false);\n          setSnackBar({\n            open: true,\n            message: \"Дані студента завантажено\",\n          });\n        } else {\n          setOpen({ open: false });\n          setSnackBar({\n            open: true,\n            message: \"Немає даних про вибраного студента\",\n          });\n        }\n      } catch (e) {\n        setLoading(false);\n        setOpen({ open: false });\n        setSnackBar({ open: true, message: \"Закрито через помилку\" });\n        setError({\n          error: true,\n          message:\n            \"Сталася помилка при отриманні даних студента. Спробуйте знову\",\n          type: \"Помилка\",\n        });\n      }\n    })();\n    return () => setStudent({});\n  }, [groupID, studentID]);\n\n  return (\n    <Paper component=\"div\" elevation={0} variant={\"outlined\"}>\n      <Dialog\n        fullWidth={false}\n        maxWidth={false}\n        className={classes.Dialog}\n        open={open}\n      >\n        {loading ? (\n          <CircularProgress\n            className={classes.Spinner}\n            color={\"primary\"}\n            size={80}\n            variant=\"indeterminate\"\n          />\n        ) : (\n          <div className={classes.ViewDialog}>\n            <DialogTitle disableTypography={true} className={classes.Title}>\n              <h3>\n                <InfoIcon className={classes.TitleIcon} />\n                Інформація про студента\n              </h3>\n            </DialogTitle>\n            <DialogContent className={classes.Content}>\n              <StudentInfo student={student} />\n            </DialogContent>\n            <DialogActions className={classes.Actions}>\n              <Button\n                variant={\"contained\"}\n                className={classes.Button}\n                onClick={() => {\n                  setOpen({ open: false });\n                  setSnackBar({ open: true, message: \"Закрито\" });\n                }}\n                type=\"reset\"\n              >\n                Закрити\n              </Button>\n            </DialogActions>\n          </div>\n        )}\n      </Dialog>\n    </Paper>\n  );\n};\n\nexport default StudentsViewModal;\n\nStudentsViewModal.propTypes = {\n  open: PropTypes.bool,\n  groupID: PropTypes.string,\n  studentID: PropTypes.string,\n  setOpen: PropTypes.func,\n  setSnackBar: PropTypes.func,\n  setError: PropTypes.func,\n};\n","D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsViewModal\\StudentInfo\\StudentInfo.js",[],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsTransferModal\\StudentsTransferModal.js",["130"],"D:\\Projects\\IT Academy\\dtapi-if-117-ui-react\\src\\features\\Students\\StudentsTransferModal\\TransferSelects\\TransferSelects.js",["131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":55,"column":6,"nodeType":"138","endLine":55,"endColumn":57,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"137","line":118,"column":6,"nodeType":"138","endLine":128,"endColumn":4,"suggestions":"140"},{"ruleId":"136","severity":1,"message":"141","line":63,"column":6,"nodeType":"138","endLine":63,"endColumn":26,"suggestions":"142"},{"ruleId":"136","severity":1,"message":"137","line":53,"column":6,"nodeType":"138","endLine":53,"endColumn":15,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"144","line":33,"column":6,"nodeType":"138","endLine":33,"endColumn":8,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array.","ArrayExpression",["148"],["149"],"React Hook useEffect has missing dependencies: 'setError', 'setOpen', and 'setSnackBar'. Either include them or remove the dependency array. If 'setSnackBar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["150"],["151"],"React Hook useEffect has a missing dependency: 'errorHandler'. Either include it or remove the dependency array. If 'errorHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [isUpdate, student, setOpen, setError, setSnackBar, errorHandler]",{"range":"163","text":"164"},"Update the dependencies array to be: [submit, studentData, setStudents, isUpdate, setSnackBar, setOpen, setError, setLoading, setDataSource, errorHandler]",{"range":"165","text":"166"},"Update the dependencies array to be: [groupID, setError, setOpen, setSnackBar, studentID]",{"range":"167","text":"168"},"Update the dependencies array to be: [errorHandler, student]",{"range":"169","text":"170"},"Update the dependencies array to be: [errorHandler]",{"range":"171","text":"172"},[1476,1527],"[isUpdate, student, setOpen, setError, setSnackBar, errorHandler]",[3681,3825],"[submit, studentData, setStudents, isUpdate, setSnackBar, setOpen, setError, setLoading, setDataSource, errorHandler]",[1613,1633],"[groupID, setError, setOpen, setSnackBar, studentID]",[1440,1449],"[errorHandler, student]",[1040,1042],"[errorHandler]"]